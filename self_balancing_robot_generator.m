
% Auto-generate Simscape Multibody model for a Two-Wheeled Self-Balancing Robot
% Run this script in MATLAB to build the model

model = 'SelfBalancingRobot';
new_system(model);
open_system(model);

% Load required libraries
load_system('sm_lib');

% Add Solver Configuration
add_block('simscape/Solver Configuration', [model '/SolverConfig'], 'Position', [30 30 80 80]);

% Add World Frame and Mechanism Configuration
add_block('sm_lib/Frames and Transforms/World Frame', [model '/World Frame'], 'Position', [100 30 130 60]);
add_block('sm_lib/Utilities/Mechanism Configuration', [model '/Mechanism Config'], 'Position', [100 80 200 120]);

% Connect Mechanism Config to Solver
add_line(model, 'Mechanism Config/RConn1', 'SolverConfig/RConn1', 'autorouting','on');

% Add Ground (Frame)
add_block('sm_lib/Frames and Transforms/Ground', [model '/Ground'], 'Position', [200 30 250 60]);

% Add Wheel 1
add_block('sm_lib/Bodies/Solid', [model '/Wheel1'], ...
    'Position', [300 30 350 80], ...
    'Shape', 'Cylinder', ...
    'Geometry.Cylindrical.Radius', '0.05', ...
    'Geometry.Cylindrical.Length', '0.02', ...
    'Mass', '0.2');

% Add Wheel 2
add_block('sm_lib/Bodies/Solid', [model '/Wheel2'], ...
    'Position', [300 100 350 150], ...
    'Shape', 'Cylinder', ...
    'Geometry.Cylindrical.Radius', '0.05', ...
    'Geometry.Cylindrical.Length', '0.02', ...
    'Mass', '0.2');

% Add Body
add_block('sm_lib/Bodies/Solid', [model '/Body'], ...
    'Position', [500 60 550 120], ...
    'Shape', 'Brick', ...
    'Geometry.Brick.Length', '0.05', ...
    'Geometry.Brick.Width', '0.1', ...
    'Geometry.Brick.Height', '0.3', ...
    'Mass', '1.5');

% Save and open the model
save_system(model);
disp(['Model "', model, '" created.']);
